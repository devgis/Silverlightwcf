//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SilverlightAPP.MyWS {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/WCF.Data.Models")]
    public partial class Resource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal DepIDField;
        
        private bool IsDefaultField;
        
        private decimal OrgIDField;
        
        private string ResDescField;
        
        private string ResGroupNoField;
        
        private decimal ResIDField;
        
        private string ResNOField;
        
        private string ResNameField;
        
        private int ResTypeField;
        
        private int StatusField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DepID {
            get {
                return this.DepIDField;
            }
            set {
                if ((this.DepIDField.Equals(value) != true)) {
                    this.DepIDField = value;
                    this.RaisePropertyChanged("DepID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResDesc {
            get {
                return this.ResDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ResDescField, value) != true)) {
                    this.ResDescField = value;
                    this.RaisePropertyChanged("ResDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResGroupNo {
            get {
                return this.ResGroupNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ResGroupNoField, value) != true)) {
                    this.ResGroupNoField = value;
                    this.RaisePropertyChanged("ResGroupNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ResID {
            get {
                return this.ResIDField;
            }
            set {
                if ((this.ResIDField.Equals(value) != true)) {
                    this.ResIDField = value;
                    this.RaisePropertyChanged("ResID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResNO {
            get {
                return this.ResNOField;
            }
            set {
                if ((object.ReferenceEquals(this.ResNOField, value) != true)) {
                    this.ResNOField = value;
                    this.RaisePropertyChanged("ResNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResName {
            get {
                return this.ResNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResNameField, value) != true)) {
                    this.ResNameField = value;
                    this.RaisePropertyChanged("ResName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResType {
            get {
                return this.ResTypeField;
            }
            set {
                if ((this.ResTypeField.Equals(value) != true)) {
                    this.ResTypeField = value;
                    this.RaisePropertyChanged("ResType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyWS.IDService")]
    public interface IDService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/AddResource", ReplyAction="http://tempuri.org/IDService/AddResourceResponse")]
        System.IAsyncResult BeginAddResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState);
        
        bool EndAddResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/EditResource", ReplyAction="http://tempuri.org/IDService/EditResourceResponse")]
        System.IAsyncResult BeginEditResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState);
        
        bool EndEditResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/DelResource", ReplyAction="http://tempuri.org/IDService/DelResourceResponse")]
        System.IAsyncResult BeginDelResource(int ResID, System.AsyncCallback callback, object asyncState);
        
        bool EndDelResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/DelResources", ReplyAction="http://tempuri.org/IDService/DelResourcesResponse")]
        System.IAsyncResult BeginDelResources(System.Collections.ObjectModel.ObservableCollection<int> ids, System.AsyncCallback callback, object asyncState);
        
        bool EndDelResources(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/QueryResource", ReplyAction="http://tempuri.org/IDService/QueryResourceResponse")]
        System.IAsyncResult BeginQueryResource(string Where, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> EndQueryResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDService/GetMaxID", ReplyAction="http://tempuri.org/IDService/GetMaxIDResponse")]
        System.IAsyncResult BeginGetMaxID(System.AsyncCallback callback, object asyncState);
        
        decimal EndGetMaxID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDServiceChannel : SilverlightAPP.MyWS.IDService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EditResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMaxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMaxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DServiceClient : System.ServiceModel.ClientBase<SilverlightAPP.MyWS.IDService>, SilverlightAPP.MyWS.IDService {
        
        private BeginOperationDelegate onBeginAddResourceDelegate;
        
        private EndOperationDelegate onEndAddResourceDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditResourceDelegate;
        
        private EndOperationDelegate onEndEditResourceDelegate;
        
        private System.Threading.SendOrPostCallback onEditResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelResourceDelegate;
        
        private EndOperationDelegate onEndDelResourceDelegate;
        
        private System.Threading.SendOrPostCallback onDelResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelResourcesDelegate;
        
        private EndOperationDelegate onEndDelResourcesDelegate;
        
        private System.Threading.SendOrPostCallback onDelResourcesCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryResourceDelegate;
        
        private EndOperationDelegate onEndQueryResourceDelegate;
        
        private System.Threading.SendOrPostCallback onQueryResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMaxIDDelegate;
        
        private EndOperationDelegate onEndGetMaxIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetMaxIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DServiceClient() {
        }
        
        public DServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddResourceCompletedEventArgs> AddResourceCompleted;
        
        public event System.EventHandler<EditResourceCompletedEventArgs> EditResourceCompleted;
        
        public event System.EventHandler<DelResourceCompletedEventArgs> DelResourceCompleted;
        
        public event System.EventHandler<DelResourcesCompletedEventArgs> DelResourcesCompleted;
        
        public event System.EventHandler<QueryResourceCompletedEventArgs> QueryResourceCompleted;
        
        public event System.EventHandler<GetMaxIDCompletedEventArgs> GetMaxIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginAddResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResource(r, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightAPP.MyWS.IDService.EndAddResource(System.IAsyncResult result) {
            return base.Channel.EndAddResource(result);
        }
        
        private System.IAsyncResult OnBeginAddResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightAPP.MyWS.Resource r = ((SilverlightAPP.MyWS.Resource)(inValues[0]));
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginAddResource(r, callback, asyncState);
        }
        
        private object[] OnEndAddResource(System.IAsyncResult result) {
            bool retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndAddResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddResourceCompleted(object state) {
            if ((this.AddResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceCompleted(this, new AddResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceAsync(SilverlightAPP.MyWS.Resource r) {
            this.AddResourceAsync(r, null);
        }
        
        public void AddResourceAsync(SilverlightAPP.MyWS.Resource r, object userState) {
            if ((this.onBeginAddResourceDelegate == null)) {
                this.onBeginAddResourceDelegate = new BeginOperationDelegate(this.OnBeginAddResource);
            }
            if ((this.onEndAddResourceDelegate == null)) {
                this.onEndAddResourceDelegate = new EndOperationDelegate(this.OnEndAddResource);
            }
            if ((this.onAddResourceCompletedDelegate == null)) {
                this.onAddResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceDelegate, new object[] {
                        r}, this.onEndAddResourceDelegate, this.onAddResourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginEditResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditResource(r, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightAPP.MyWS.IDService.EndEditResource(System.IAsyncResult result) {
            return base.Channel.EndEditResource(result);
        }
        
        private System.IAsyncResult OnBeginEditResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightAPP.MyWS.Resource r = ((SilverlightAPP.MyWS.Resource)(inValues[0]));
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginEditResource(r, callback, asyncState);
        }
        
        private object[] OnEndEditResource(System.IAsyncResult result) {
            bool retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndEditResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEditResourceCompleted(object state) {
            if ((this.EditResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditResourceCompleted(this, new EditResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditResourceAsync(SilverlightAPP.MyWS.Resource r) {
            this.EditResourceAsync(r, null);
        }
        
        public void EditResourceAsync(SilverlightAPP.MyWS.Resource r, object userState) {
            if ((this.onBeginEditResourceDelegate == null)) {
                this.onBeginEditResourceDelegate = new BeginOperationDelegate(this.OnBeginEditResource);
            }
            if ((this.onEndEditResourceDelegate == null)) {
                this.onEndEditResourceDelegate = new EndOperationDelegate(this.OnEndEditResource);
            }
            if ((this.onEditResourceCompletedDelegate == null)) {
                this.onEditResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditResourceCompleted);
            }
            base.InvokeAsync(this.onBeginEditResourceDelegate, new object[] {
                        r}, this.onEndEditResourceDelegate, this.onEditResourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginDelResource(int ResID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelResource(ResID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightAPP.MyWS.IDService.EndDelResource(System.IAsyncResult result) {
            return base.Channel.EndDelResource(result);
        }
        
        private System.IAsyncResult OnBeginDelResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ResID = ((int)(inValues[0]));
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginDelResource(ResID, callback, asyncState);
        }
        
        private object[] OnEndDelResource(System.IAsyncResult result) {
            bool retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndDelResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelResourceCompleted(object state) {
            if ((this.DelResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelResourceCompleted(this, new DelResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelResourceAsync(int ResID) {
            this.DelResourceAsync(ResID, null);
        }
        
        public void DelResourceAsync(int ResID, object userState) {
            if ((this.onBeginDelResourceDelegate == null)) {
                this.onBeginDelResourceDelegate = new BeginOperationDelegate(this.OnBeginDelResource);
            }
            if ((this.onEndDelResourceDelegate == null)) {
                this.onEndDelResourceDelegate = new EndOperationDelegate(this.OnEndDelResource);
            }
            if ((this.onDelResourceCompletedDelegate == null)) {
                this.onDelResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelResourceCompleted);
            }
            base.InvokeAsync(this.onBeginDelResourceDelegate, new object[] {
                        ResID}, this.onEndDelResourceDelegate, this.onDelResourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginDelResources(System.Collections.ObjectModel.ObservableCollection<int> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelResources(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightAPP.MyWS.IDService.EndDelResources(System.IAsyncResult result) {
            return base.Channel.EndDelResources(result);
        }
        
        private System.IAsyncResult OnBeginDelResources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> ids = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginDelResources(ids, callback, asyncState);
        }
        
        private object[] OnEndDelResources(System.IAsyncResult result) {
            bool retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndDelResources(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelResourcesCompleted(object state) {
            if ((this.DelResourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelResourcesCompleted(this, new DelResourcesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelResourcesAsync(System.Collections.ObjectModel.ObservableCollection<int> ids) {
            this.DelResourcesAsync(ids, null);
        }
        
        public void DelResourcesAsync(System.Collections.ObjectModel.ObservableCollection<int> ids, object userState) {
            if ((this.onBeginDelResourcesDelegate == null)) {
                this.onBeginDelResourcesDelegate = new BeginOperationDelegate(this.OnBeginDelResources);
            }
            if ((this.onEndDelResourcesDelegate == null)) {
                this.onEndDelResourcesDelegate = new EndOperationDelegate(this.OnEndDelResources);
            }
            if ((this.onDelResourcesCompletedDelegate == null)) {
                this.onDelResourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelResourcesCompleted);
            }
            base.InvokeAsync(this.onBeginDelResourcesDelegate, new object[] {
                        ids}, this.onEndDelResourcesDelegate, this.onDelResourcesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginQueryResource(string Where, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryResource(Where, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> SilverlightAPP.MyWS.IDService.EndQueryResource(System.IAsyncResult result) {
            return base.Channel.EndQueryResource(result);
        }
        
        private System.IAsyncResult OnBeginQueryResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Where = ((string)(inValues[0]));
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginQueryResource(Where, callback, asyncState);
        }
        
        private object[] OnEndQueryResource(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndQueryResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryResourceCompleted(object state) {
            if ((this.QueryResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryResourceCompleted(this, new QueryResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryResourceAsync(string Where) {
            this.QueryResourceAsync(Where, null);
        }
        
        public void QueryResourceAsync(string Where, object userState) {
            if ((this.onBeginQueryResourceDelegate == null)) {
                this.onBeginQueryResourceDelegate = new BeginOperationDelegate(this.OnBeginQueryResource);
            }
            if ((this.onEndQueryResourceDelegate == null)) {
                this.onEndQueryResourceDelegate = new EndOperationDelegate(this.OnEndQueryResource);
            }
            if ((this.onQueryResourceCompletedDelegate == null)) {
                this.onQueryResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryResourceCompleted);
            }
            base.InvokeAsync(this.onBeginQueryResourceDelegate, new object[] {
                        Where}, this.onEndQueryResourceDelegate, this.onQueryResourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightAPP.MyWS.IDService.BeginGetMaxID(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMaxID(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        decimal SilverlightAPP.MyWS.IDService.EndGetMaxID(System.IAsyncResult result) {
            return base.Channel.EndGetMaxID(result);
        }
        
        private System.IAsyncResult OnBeginGetMaxID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightAPP.MyWS.IDService)(this)).BeginGetMaxID(callback, asyncState);
        }
        
        private object[] OnEndGetMaxID(System.IAsyncResult result) {
            decimal retVal = ((SilverlightAPP.MyWS.IDService)(this)).EndGetMaxID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMaxIDCompleted(object state) {
            if ((this.GetMaxIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMaxIDCompleted(this, new GetMaxIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMaxIDAsync() {
            this.GetMaxIDAsync(null);
        }
        
        public void GetMaxIDAsync(object userState) {
            if ((this.onBeginGetMaxIDDelegate == null)) {
                this.onBeginGetMaxIDDelegate = new BeginOperationDelegate(this.OnBeginGetMaxID);
            }
            if ((this.onEndGetMaxIDDelegate == null)) {
                this.onEndGetMaxIDDelegate = new EndOperationDelegate(this.OnEndGetMaxID);
            }
            if ((this.onGetMaxIDCompletedDelegate == null)) {
                this.onGetMaxIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMaxIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetMaxIDDelegate, null, this.onEndGetMaxIDDelegate, this.onGetMaxIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightAPP.MyWS.IDService CreateChannel() {
            return new DServiceClientChannel(this);
        }
        
        private class DServiceClientChannel : ChannelBase<SilverlightAPP.MyWS.IDService>, SilverlightAPP.MyWS.IDService {
            
            public DServiceClientChannel(System.ServiceModel.ClientBase<SilverlightAPP.MyWS.IDService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = r;
                System.IAsyncResult _result = base.BeginInvoke("AddResource", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddResource(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddResource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEditResource(SilverlightAPP.MyWS.Resource r, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = r;
                System.IAsyncResult _result = base.BeginInvoke("EditResource", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEditResource(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EditResource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelResource(int ResID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ResID;
                System.IAsyncResult _result = base.BeginInvoke("DelResource", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDelResource(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DelResource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelResources(System.Collections.ObjectModel.ObservableCollection<int> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("DelResources", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDelResources(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DelResources", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginQueryResource(string Where, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Where;
                System.IAsyncResult _result = base.BeginInvoke("QueryResource", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> EndQueryResource(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverlightAPP.MyWS.Resource>)(base.EndInvoke("QueryResource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMaxID(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMaxID", _args, callback, asyncState);
                return _result;
            }
            
            public decimal EndGetMaxID(System.IAsyncResult result) {
                object[] _args = new object[0];
                decimal _result = ((decimal)(base.EndInvoke("GetMaxID", _args, result)));
                return _result;
            }
        }
    }
}
